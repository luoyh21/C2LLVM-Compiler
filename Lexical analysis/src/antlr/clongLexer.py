# Generated from clong.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\63")
        buf.write("\u0143\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5")
        buf.write("\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3")
        buf.write("\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3")
        buf.write("\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3")
        buf.write("\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 ")
        buf.write("\3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3")
        buf.write("&\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3")
        buf.write("*\3*\7*\u00f6\n*\f*\16*\u00f9\13*\3+\6+\u00fc\n+\r+\16")
        buf.write("+\u00fd\3,\6,\u0101\n,\r,\16,\u0102\3,\3,\6,\u0107\n,")
        buf.write("\r,\16,\u0108\3-\3-\3-\3-\3.\3.\7.\u0111\n.\f.\16.\u0114")
        buf.write("\13.\3.\3.\3/\3/\3/\3/\7/\u011c\n/\f/\16/\u011f\13/\3")
        buf.write("/\5/\u0122\n/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\7\60\u012c")
        buf.write("\n\60\f\60\16\60\u012f\13\60\3\60\3\60\3\60\3\60\3\60")
        buf.write("\3\61\6\61\u0137\n\61\r\61\16\61\u0138\3\61\3\61\3\62")
        buf.write("\6\62\u013e\n\62\r\62\16\62\u013f\3\62\3\62\5\u0112\u011d")
        buf.write("\u012d\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63\3\2\7\5\2C\\")
        buf.write("aac|\6\2\62;C\\aac|\3\2\62;\4\2\13\f\17\17\3\2\"\"\2\u014c")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e\3\2\2\2\5n\3")
        buf.write("\2\2\2\7p\3\2\2\2\ts\3\2\2\2\13x\3\2\2\2\rz\3\2\2\2\17")
        buf.write("~\3\2\2\2\21\u0083\3\2\2\2\23\u0088\3\2\2\2\25\u008b\3")
        buf.write("\2\2\2\27\u008d\3\2\2\2\31\u008f\3\2\2\2\33\u0091\3\2")
        buf.write("\2\2\35\u0098\3\2\2\2\37\u009a\3\2\2\2!\u009c\3\2\2\2")
        buf.write("#\u009e\3\2\2\2%\u00a3\3\2\2\2\'\u00aa\3\2\2\2)\u00b1")
        buf.write("\3\2\2\2+\u00b4\3\2\2\2-\u00b9\3\2\2\2/\u00bf\3\2\2\2")
        buf.write("\61\u00c3\3\2\2\2\63\u00c5\3\2\2\2\65\u00c7\3\2\2\2\67")
        buf.write("\u00c9\3\2\2\29\u00cb\3\2\2\2;\u00cd\3\2\2\2=\u00cf\3")
        buf.write("\2\2\2?\u00d1\3\2\2\2A\u00d3\3\2\2\2C\u00d6\3\2\2\2E\u00d9")
        buf.write("\3\2\2\2G\u00dc\3\2\2\2I\u00df\3\2\2\2K\u00e2\3\2\2\2")
        buf.write("M\u00e5\3\2\2\2O\u00e7\3\2\2\2Q\u00ec\3\2\2\2S\u00f3\3")
        buf.write("\2\2\2U\u00fb\3\2\2\2W\u0100\3\2\2\2Y\u010a\3\2\2\2[\u010e")
        buf.write("\3\2\2\2]\u0117\3\2\2\2_\u0127\3\2\2\2a\u0136\3\2\2\2")
        buf.write("c\u013d\3\2\2\2ef\7%\2\2fg\7k\2\2gh\7p\2\2hi\7e\2\2ij")
        buf.write("\7n\2\2jk\7w\2\2kl\7f\2\2lm\7g\2\2m\4\3\2\2\2no\7>\2\2")
        buf.write("o\6\3\2\2\2pq\7\60\2\2qr\7j\2\2r\b\3\2\2\2st\7\60\2\2")
        buf.write("tu\7e\2\2uv\7r\2\2vw\7r\2\2w\n\3\2\2\2xy\7@\2\2y\f\3\2")
        buf.write("\2\2z{\7k\2\2{|\7p\2\2|}\7v\2\2}\16\3\2\2\2~\177\7x\2")
        buf.write("\2\177\u0080\7q\2\2\u0080\u0081\7k\2\2\u0081\u0082\7f")
        buf.write("\2\2\u0082\20\3\2\2\2\u0083\u0084\7o\2\2\u0084\u0085\7")
        buf.write("c\2\2\u0085\u0086\7k\2\2\u0086\u0087\7p\2\2\u0087\22\3")
        buf.write("\2\2\2\u0088\u0089\7*\2\2\u0089\u008a\7+\2\2\u008a\24")
        buf.write("\3\2\2\2\u008b\u008c\7}\2\2\u008c\26\3\2\2\2\u008d\u008e")
        buf.write("\7\177\2\2\u008e\30\3\2\2\2\u008f\u0090\7=\2\2\u0090\32")
        buf.write("\3\2\2\2\u0091\u0092\7r\2\2\u0092\u0093\7t\2\2\u0093\u0094")
        buf.write("\7k\2\2\u0094\u0095\7p\2\2\u0095\u0096\7v\2\2\u0096\u0097")
        buf.write("\7h\2\2\u0097\34\3\2\2\2\u0098\u0099\7*\2\2\u0099\36\3")
        buf.write("\2\2\2\u009a\u009b\7.\2\2\u009b \3\2\2\2\u009c\u009d\7")
        buf.write("+\2\2\u009d\"\3\2\2\2\u009e\u009f\7i\2\2\u009f\u00a0\7")
        buf.write("g\2\2\u00a0\u00a1\7v\2\2\u00a1\u00a2\7u\2\2\u00a2$\3\2")
        buf.write("\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6")
        buf.write("\7t\2\2\u00a6\u00a7\7n\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9")
        buf.write("\7p\2\2\u00a9&\3\2\2\2\u00aa\u00ab\7t\2\2\u00ab\u00ac")
        buf.write("\7g\2\2\u00ac\u00ad\7v\2\2\u00ad\u00ae\7w\2\2\u00ae\u00af")
        buf.write("\7t\2\2\u00af\u00b0\7p\2\2\u00b0(\3\2\2\2\u00b1\u00b2")
        buf.write("\7k\2\2\u00b2\u00b3\7h\2\2\u00b3*\3\2\2\2\u00b4\u00b5")
        buf.write("\7g\2\2\u00b5\u00b6\7n\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8")
        buf.write("\7g\2\2\u00b8,\3\2\2\2\u00b9\u00ba\7y\2\2\u00ba\u00bb")
        buf.write("\7j\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be")
        buf.write("\7g\2\2\u00be.\3\2\2\2\u00bf\u00c0\7h\2\2\u00c0\u00c1")
        buf.write("\7q\2\2\u00c1\u00c2\7t\2\2\u00c2\60\3\2\2\2\u00c3\u00c4")
        buf.write("\7?\2\2\u00c4\62\3\2\2\2\u00c5\u00c6\7]\2\2\u00c6\64\3")
        buf.write("\2\2\2\u00c7\u00c8\7_\2\2\u00c8\66\3\2\2\2\u00c9\u00ca")
        buf.write("\7/\2\2\u00ca8\3\2\2\2\u00cb\u00cc\7-\2\2\u00cc:\3\2\2")
        buf.write("\2\u00cd\u00ce\7,\2\2\u00ce<\3\2\2\2\u00cf\u00d0\7\61")
        buf.write("\2\2\u00d0>\3\2\2\2\u00d1\u00d2\7\'\2\2\u00d2@\3\2\2\2")
        buf.write("\u00d3\u00d4\7@\2\2\u00d4\u00d5\7?\2\2\u00d5B\3\2\2\2")
        buf.write("\u00d6\u00d7\7>\2\2\u00d7\u00d8\7?\2\2\u00d8D\3\2\2\2")
        buf.write("\u00d9\u00da\7?\2\2\u00da\u00db\7?\2\2\u00dbF\3\2\2\2")
        buf.write("\u00dc\u00dd\7#\2\2\u00dd\u00de\7?\2\2\u00deH\3\2\2\2")
        buf.write("\u00df\u00e0\7(\2\2\u00e0\u00e1\7(\2\2\u00e1J\3\2\2\2")
        buf.write("\u00e2\u00e3\7~\2\2\u00e3\u00e4\7~\2\2\u00e4L\3\2\2\2")
        buf.write("\u00e5\u00e6\7#\2\2\u00e6N\3\2\2\2\u00e7\u00e8\7e\2\2")
        buf.write("\u00e8\u00e9\7j\2\2\u00e9\u00ea\7c\2\2\u00ea\u00eb\7t")
        buf.write("\2\2\u00ebP\3\2\2\2\u00ec\u00ed\7f\2\2\u00ed\u00ee\7q")
        buf.write("\2\2\u00ee\u00ef\7w\2\2\u00ef\u00f0\7d\2\2\u00f0\u00f1")
        buf.write("\7n\2\2\u00f1\u00f2\7g\2\2\u00f2R\3\2\2\2\u00f3\u00f7")
        buf.write("\t\2\2\2\u00f4\u00f6\t\3\2\2\u00f5\u00f4\3\2\2\2\u00f6")
        buf.write("\u00f9\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2")
        buf.write("\u00f8T\3\2\2\2\u00f9\u00f7\3\2\2\2\u00fa\u00fc\t\4\2")
        buf.write("\2\u00fb\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u00fb")
        buf.write("\3\2\2\2\u00fd\u00fe\3\2\2\2\u00feV\3\2\2\2\u00ff\u0101")
        buf.write("\t\4\2\2\u0100\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102")
        buf.write("\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0104\3\2\2\2")
        buf.write("\u0104\u0106\7\60\2\2\u0105\u0107\t\4\2\2\u0106\u0105")
        buf.write("\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u0106\3\2\2\2\u0108")
        buf.write("\u0109\3\2\2\2\u0109X\3\2\2\2\u010a\u010b\7)\2\2\u010b")
        buf.write("\u010c\13\2\2\2\u010c\u010d\7)\2\2\u010dZ\3\2\2\2\u010e")
        buf.write("\u0112\7$\2\2\u010f\u0111\13\2\2\2\u0110\u010f\3\2\2\2")
        buf.write("\u0111\u0114\3\2\2\2\u0112\u0113\3\2\2\2\u0112\u0110\3")
        buf.write("\2\2\2\u0113\u0115\3\2\2\2\u0114\u0112\3\2\2\2\u0115\u0116")
        buf.write("\7$\2\2\u0116\\\3\2\2\2\u0117\u0118\7\61\2\2\u0118\u0119")
        buf.write("\7\61\2\2\u0119\u011d\3\2\2\2\u011a\u011c\13\2\2\2\u011b")
        buf.write("\u011a\3\2\2\2\u011c\u011f\3\2\2\2\u011d\u011e\3\2\2\2")
        buf.write("\u011d\u011b\3\2\2\2\u011e\u0121\3\2\2\2\u011f\u011d\3")
        buf.write("\2\2\2\u0120\u0122\7\17\2\2\u0121\u0120\3\2\2\2\u0121")
        buf.write("\u0122\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0124\7\f\2\2")
        buf.write("\u0124\u0125\3\2\2\2\u0125\u0126\b/\2\2\u0126^\3\2\2\2")
        buf.write("\u0127\u0128\7\61\2\2\u0128\u0129\7,\2\2\u0129\u012d\3")
        buf.write("\2\2\2\u012a\u012c\13\2\2\2\u012b\u012a\3\2\2\2\u012c")
        buf.write("\u012f\3\2\2\2\u012d\u012e\3\2\2\2\u012d\u012b\3\2\2\2")
        buf.write("\u012e\u0130\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0131\7")
        buf.write(",\2\2\u0131\u0132\7\61\2\2\u0132\u0133\3\2\2\2\u0133\u0134")
        buf.write("\b\60\2\2\u0134`\3\2\2\2\u0135\u0137\t\5\2\2\u0136\u0135")
        buf.write("\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u0136\3\2\2\2\u0138")
        buf.write("\u0139\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013b\b\61\2")
        buf.write("\2\u013bb\3\2\2\2\u013c\u013e\t\6\2\2\u013d\u013c\3\2")
        buf.write("\2\2\u013e\u013f\3\2\2\2\u013f\u013d\3\2\2\2\u013f\u0140")
        buf.write("\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0142\b\62\2\2\u0142")
        buf.write("d\3\2\2\2\r\2\u00f7\u00fd\u0102\u0108\u0112\u011d\u0121")
        buf.write("\u012d\u0138\u013f\3\b\2\2")
        return buf.getvalue()


class clongLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    PARAM = 41
    INT = 42
    DOUBLE = 43
    CHAR = 44
    STRING = 45
    LineComment = 46
    BlockComment = 47
    DELIMITER = 48
    SPACE = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include'", "'<'", "'.h'", "'.cpp'", "'>'", "'int'", "'void'", 
            "'main'", "'()'", "'{'", "'}'", "';'", "'printf'", "'('", "','", 
            "')'", "'gets'", "'strlen'", "'return'", "'if'", "'else'", "'while'", 
            "'for'", "'='", "'['", "']'", "'-'", "'+'", "'*'", "'/'", "'%'", 
            "'>='", "'<='", "'=='", "'!='", "'&&'", "'||'", "'!'", "'char'", 
            "'double'" ]

    symbolicNames = [ "<INVALID>",
            "PARAM", "INT", "DOUBLE", "CHAR", "STRING", "LineComment", "BlockComment", 
            "DELIMITER", "SPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "PARAM", "INT", "DOUBLE", "CHAR", "STRING", 
                  "LineComment", "BlockComment", "DELIMITER", "SPACE" ]

    grammarFileName = "clong.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


